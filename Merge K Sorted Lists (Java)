import java.util.*;

class ListNode {
    int val;
    ListNode next;
    ListNode(int x) {
        val = x;
    }
}

class Solution {
    public ListNode mergekLists(ListNode[] lists) {
        if (lists.length == 0) return null;
        return breaks(lists, 0, lists.length - 1);
    }

    public ListNode merge2Lists(ListNode l1, ListNode l2) {
        if (l1 == null) return l2;
        if (l2 == null) return l1;

        if (l1.val < l2.val) {
            l1.next = merge2Lists(l1.next, l2);
            return l1;
        } else {
            l2.next = merge2Lists(l1, l2.next);
            return l2;
        }
    }

    public ListNode breaks(ListNode[] lists, int start, int end) {
        if (start == end) return lists[start];
        int mid = (start + end) / 2;
        ListNode left = breaks(lists, start, mid);
        ListNode right = breaks(lists, mid + 1, end);
        return merge2Lists(left, right);
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.println("Enter number of Linked Lists:");
        int k = sc.nextInt();
        ListNode[] lists = new ListNode[k];

        for (int i = 0; i < k; i++) {
            System.out.println("Enter number of elements in list " + (i + 1) + ":");
            int n = sc.nextInt();

            ListNode head = null, tail = null;
            for (int j = 0; j < n; j++) {
                System.out.print("Enter value " + (j + 1) + ": ");
                int val = sc.nextInt();
                ListNode newNode = new ListNode(val);

                if (head == null) {
                    head = newNode;
                    tail = newNode;
                } else {
                    tail.next = newNode;
                    tail = tail.next;
                }
            }
            lists[i] = head;
        }

        Solution sol = new Solution();
        ListNode merged = sol.mergekLists(lists);

        System.out.print("Merged List: ");
        for (ListNode p = merged; p != null; p = p.next) {
            System.out.print(p.val + " ");
        }
    }
}
